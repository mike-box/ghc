
==================== Derived instances ====================
Derived class instances:
  instance (GHC.Base.Applicative f, GHC.Base.Applicative g,
            GHC.Base.Semigroup a) =>
           GHC.Base.Semigroup (T14578.Wat f g a) where
    (GHC.Base.<>) ::
      T14578.Wat f[sk:1] g[sk:1] a[sk:1]
      -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
      -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
    GHC.Base.sconcat ::
      GHC.Base.NonEmpty (T14578.Wat f[sk:1] g[sk:1] a[sk:1])
      -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
    GHC.Base.stimes ::
      forall (b :: *). GHC.Real.Integral b =>
                       b
                       -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
                       -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
    (GHC.Base.<>)
      = GHC.Prim.coerce
          @(T14578.App (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1]
            -> T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1]
            -> T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1])
          @(T14578.Wat f[sk:1] g[sk:1] a[sk:1]
            -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
            -> T14578.Wat f[sk:1] g[sk:1] a[sk:1])
          ((GHC.Base.<>)
             @(T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1]))
    GHC.Base.sconcat
      = GHC.Prim.coerce
          @(GHC.Base.NonEmpty
              (T14578.App (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1])
            -> T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1])
          @(GHC.Base.NonEmpty (T14578.Wat f[sk:1] g[sk:1] a[sk:1])
            -> T14578.Wat f[sk:1] g[sk:1] a[sk:1])
          (GHC.Base.sconcat
             @(T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1]))
    GHC.Base.stimes
      = GHC.Prim.coerce
          @(b
            -> T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1]
            -> T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1])
          @(b
            -> T14578.Wat f[sk:1] g[sk:1] a[sk:1]
            -> T14578.Wat f[sk:1] g[sk:1] a[sk:1])
          (GHC.Base.stimes
             @(T14578.App
                 (Data.Functor.Compose.Compose f[sk:1] g[sk:1]) a[sk:1]))
  
  instance GHC.Base.Functor f =>
           GHC.Base.Functor (T14578.App f) where
    GHC.Base.fmap ::
      forall (a :: *) (b :: *). (a -> b)
                                -> T14578.App f[sk:1] a -> T14578.App f[sk:1] b
    (GHC.Base.<$) ::
      forall (a :: *) (b :: *). a
                                -> T14578.App f[sk:1] b -> T14578.App f[sk:1] a
    GHC.Base.fmap
      = GHC.Prim.coerce
          @((a -> b) -> f[sk:1] a -> f[sk:1] b)
          @((a -> b) -> T14578.App f[sk:1] a -> T14578.App f[sk:1] b)
          (GHC.Base.fmap @f[sk:1])
    (GHC.Base.<$)
      = GHC.Prim.coerce
          @(a -> f[sk:1] b -> f[sk:1] a)
          @(a -> T14578.App f[sk:1] b -> T14578.App f[sk:1] a)
          ((GHC.Base.<$) @f[sk:1])
  
  instance GHC.Base.Applicative f =>
           GHC.Base.Applicative (T14578.App f) where
    GHC.Base.pure :: forall (a :: *). a -> T14578.App f[sk:1] a
    (GHC.Base.<*>) ::
      forall (a :: *) (b :: *). T14578.App f[sk:1] (a -> b)
                                -> T14578.App f[sk:1] a -> T14578.App f[sk:1] b
    GHC.Base.liftA2 ::
      forall (a :: *) (b :: *) (c :: *). (a -> b -> c)
                                         -> T14578.App f[sk:1] a
                                         -> T14578.App f[sk:1] b
                                         -> T14578.App f[sk:1] c
    (GHC.Base.*>) ::
      forall (a :: *) (b :: *). T14578.App f[sk:1] a
                                -> T14578.App f[sk:1] b -> T14578.App f[sk:1] b
    (GHC.Base.<*) ::
      forall (a :: *) (b :: *). T14578.App f[sk:1] a
                                -> T14578.App f[sk:1] b -> T14578.App f[sk:1] a
    GHC.Base.pure
      = GHC.Prim.coerce
          @(a -> f[sk:1] a) @(a -> T14578.App f[sk:1] a)
          (GHC.Base.pure @f[sk:1])
    (GHC.Base.<*>)
      = GHC.Prim.coerce
          @(f[sk:1] (a -> b) -> f[sk:1] a -> f[sk:1] b)
          @(T14578.App f[sk:1] (a -> b)
            -> T14578.App f[sk:1] a -> T14578.App f[sk:1] b)
          ((GHC.Base.<*>) @f[sk:1])
    GHC.Base.liftA2
      = GHC.Prim.coerce
          @((a -> b -> c) -> f[sk:1] a -> f[sk:1] b -> f[sk:1] c)
          @((a -> b -> c)
            -> T14578.App f[sk:1] a
            -> T14578.App f[sk:1] b
            -> T14578.App f[sk:1] c)
          (GHC.Base.liftA2 @f[sk:1])
    (GHC.Base.*>)
      = GHC.Prim.coerce
          @(f[sk:1] a -> f[sk:1] b -> f[sk:1] b)
          @(T14578.App f[sk:1] a
            -> T14578.App f[sk:1] b -> T14578.App f[sk:1] b)
          ((GHC.Base.*>) @f[sk:1])
    (GHC.Base.<*)
      = GHC.Prim.coerce
          @(f[sk:1] a -> f[sk:1] b -> f[sk:1] a)
          @(T14578.App f[sk:1] a
            -> T14578.App f[sk:1] b -> T14578.App f[sk:1] a)
          ((GHC.Base.<*) @f[sk:1])
  

Derived type family instances:



==================== Filling in method body ====================
GHC.Base.Semigroup [T14578.App f a]
  GHC.Base.sconcat = GHC.Base.$dmsconcat @(T14578.App f a)



==================== Filling in method body ====================
GHC.Base.Semigroup [T14578.App f a]
  GHC.Base.stimes = GHC.Base.$dmstimes @(T14578.App f a)


